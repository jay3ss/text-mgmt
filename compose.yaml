networks:
  app_network:
    driver: bridge

services:
  proxy:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./ngninx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app_network
    depends_on:
      - web

  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    environment:
      - DJANGO_SETTINGS_MODULE=django_project.settings
    networks:
      - app_network
    depends_on:
      - db

  db:
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - app_network

volumes:
  postgres_data:




# # compose.yaml
# # Common services and settings for both development and production

# services:
#   db:
#     # Use a PostgreSQL image for the database
#     image: postgres:17-alpine
#     volumes:
#       # Persist database data
#       - postgres_data:/var/lib/postgresql/data/
#     environment:
#       # TODO: Replace with strong, secret passwords.
#       # Use environment variables or .env file in production.
#       - POSTGRES_DB=postgres
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#     # Use restart policy to ensure the container restarts if it fails
#     ports:
#       - "5432:5432"
#     networks:
#       - app_network
#     restart: always

#   backend:
#     # Define the build context for the backend service
#       # No 'dockerfile' or 'target' specified here.
#       # These will be overridden in dev/prod compose files.
#     # Common environment variables (optional, could be in dev/prod too)
#     # environment:
#     #   - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydatabase # Example DB connection string
#     # Use depends_on to ensure db starts before backend
#     depends_on:
#       - db
#     # Common networks
#     networks:
#       - app_network

#   # frontend:
#   #   # Define the build context for the frontend service
#   #   build:
#   #     context: ./frontend
#   #     # No 'dockerfile' or 'target' specified here.
#   #     # These will be overridden in dev/prod compose files.
#   #   # Common networks
#   #   networks:
#   #     - app_network
#   #   ports:
#   #     - "5173:5173"

# # Define networks and volumes
# networks:
#   # A shared network for all services
#   app_network:
#     driver: bridge

# volumes:
#   # Volume for PostgreSQL data persistence
#   postgres_data: