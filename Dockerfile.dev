# Base image with Python & Node for frontend tooling (if needed)
FROM python:3.12-slim

# Create a non-root user and group
RUN groupadd --gid 1000 appgroup \
    && useradd --uid 1000 --gid appgroup --create-home appuser

WORKDIR /app

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
       build-essential \
       curl \
       gnupg \
    && rm -rf /var/lib/apt/lists/*

# (Optional) NodeJS for any asset builds
RUN curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Copy dependency definitions
COPY requirements.txt requirements.dev.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt \
    && pip install --no-cache-dir -r requirements.dev.txt

# Copy application code
COPY . .

# Ensure files are owned by our non-root user
RUN chown -R appuser:appgroup /app

# Switch to non-root
USER appuser

# Default entrypoint: run migrations & then start Django dev server
# (You can override this in docker-compose)
ENTRYPOINT ["./docker-entrypoint.sh"]
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]
